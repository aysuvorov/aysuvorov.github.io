[["intro.html", "Глава 1 Introduction", " Глава 1 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter 3. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Рисунок 1.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 1.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 1.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Таблица 1.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package [@R-bookdown] in this sample book, which was built on top of R Markdown and knitr [@xie2015]. "],["literature.html", "Глава 2 Literature", " Глава 2 Literature Here is a review of existing methods. "],["methods.html", "Глава 3 Methods 3.1 math example", " Глава 3 Methods We describe our methods in this chapter. Math can be added in body using usual syntax like this 3.1 math example \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt{\\frac{p(1-p)}{n}} \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] You can also use math in footnotes like this1. We will approximate standard error to 0.0272 where we mention \\(p = \\frac{a}{b}\\)↩︎ \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt{\\frac{p(1-p)}{n}} \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\]↩︎ "],["applications.html", "Глава 4 Applications 4.1 Example one 4.2 Example two", " Глава 4 Applications Some significant applications are demonstrated in this chapter. 4.1 Example one 4.2 Example two "],["final-words.html", "Глава 5 Final Words", " Глава 5 Final Words We have finished a nice book. "],["references.html", "References", " References "],["среднее-значение.html", "Глава 6 Среднее значение 6.1 Усечённое среднее: методы вычисления и примеры применения 6.2 Теоретическое обоснование 6.3 Пример вычисления усечённого среднего 6.4 Реализация на R и Python", " Глава 6 Среднее значение Среднее значение — это величина, представляющая “центральную тенденцию” набора чисел и находящаяся между крайними значениями этого набора. В математике, особенно в статистике, существует несколько видов средних (или “мер центральной тенденции”). Каждый из них пытается обобщить или типизировать данную группу данных, отражая их величину и знак. Выбор наиболее подходящей меры зависит от того, что измеряется, а также от контекста и цели. 6.0.0.1 Арифметическое среднее Арифметическое среднее, также известное как “среднее арифметическое”, вычисляется как сумма значений, деленная на их количество. Арифметическое среднее набора чисел \\(x_1, x_2, \\ldots, x_n\\) обычно обозначается с помощью черты над переменной, \\(\\bar{x}\\). Если числа получены из выборки, то среднее называется выборочным средним (\\(\\bar{x}\\)), чтобы отличать его от среднего генеральной совокупности (или математического ожидания), обозначаемого \\(\\mu\\) или \\(\\mu_x\\). Арифметическое среднее (или просто среднее) массива чисел — это сумма всех чисел, деленная на их количество. Для выборки \\(x_1, x_2, \\ldots, x_n\\) среднее обозначается как \\(\\bar{x}\\) или \\(\\hat{x}\\): \\[ \\hat{x} = \\frac{1}{n}\\left(\\sum_{i=1}^n{x_i}\\right) = \\frac{x_1 + x_2 + \\cdots + x_n}{n} \\] Например, среднее пяти значений: 4, 36, 45, 50, 75: \\[ \\frac{4 + 36 + 45 + 50 + 75}{5} = \\frac{210}{5} = 42. \\] 6.0.0.2 Геометрическое среднее (GM) Геометрическое среднее полезно для наборов положительных чисел, которые интерпретируются через их произведение (например, темпы роста): \\[ \\hat{x} = \\left(\\prod_{i=1}^n{x_i}\\right)^\\frac{1}{n} = \\left(x_1 x_2 \\cdots x_n\\right)^\\frac{1}{n} \\] Например, геометрическое среднее пяти значений: 4, 36, 45, 50, 75: \\[ (4 \\times 36 \\times 45 \\times 50 \\times 75)^\\frac{1}{5} = \\sqrt[5]{24\\;300\\;000} = 30. \\] Средняя геометрическая используется в расчетах средних темпов роста, например, колоний бактерий. 6.0.0.3 Взвешенное арифметическое среднее Взвешенное арифметическое среднее используется, если каждое значение имеет неравное влияние в массиве, какие-то значения являются более важными, какие-то - менее: \\[ \\hat{x} = \\frac{\\sum_{i=1}^n w_i \\bar{x_i}}{\\sum_{i=1}^n w_i} \\] где \\(\\hat{x_i}\\) и \\(w_i\\) — среднее и размер выборки \\(i\\) соответственно. Давайте рассмотрим примеры использования взвешенного арифметического среднего с весами в виде вероятностей и с весами в виде чисел. 6.0.1 Пример 1: Веса в виде вероятностей Предположим, у нас есть три выборки с средними значениями \\(\\bar{x_1} = 10\\), \\(\\bar{x_2} = 15\\), и \\(\\bar{x_3} = 20\\). Каждая выборка имеет вероятность быть выбранной из общей популяции: \\(P_1 = 0.4\\), \\(P_2 = 0.3\\), и \\(P_3 = 0.3\\). Эти вероятности можно использовать как веса. Расчёт: Веса: \\(w_1 = 0.4\\), \\(w_2 = 0.3\\), \\(w_3 = 0.3\\) Средние значения: \\(\\hat{x_1} = 10\\), \\(\\hat{x_2} = 15\\), \\(\\hat{x_3} = 20\\) \\[ \\bar{x} = \\frac{0.4 \\times 10 + 0.3 \\times 15 + 0.3 \\times 20}{0.4 + 0.3 + 0.3} = \\frac{4 + 4.5 + 6}{1} = \\frac{14.5}{1} = 14.5 \\] 6.0.2 Пример 2: Веса в виде чисел (размеры выборок) Предположим, у нас есть три выборки с средними значениями \\(\\hat{x_1} = 10\\), \\(\\hat{x_2} = 15\\), и \\(\\hat{x_3} = 20\\). Размеры этих выборок: \\(n_1 = 100\\), \\(n_2 = 50\\), и \\(n_3 = 50\\). Мы можем использовать размеры выборок как веса. Расчёт: Веса: \\(w_1 = 100\\), \\(w_2 = 50\\), \\(w_3 = 50\\) Средние значения: \\(\\hat{x_1} = 10\\), \\(\\hat{x_2} = 15\\), \\(\\hat{x_3} = 20\\) \\[ \\hat{x} = \\frac{100 \\times 10 + 50 \\times 15 + 50 \\times 20}{100 + 50 + 50} = \\frac{1000 + 750 + 1000}{200} = \\frac{2750}{200} = 13.75 \\] В первом примере веса представляют вероятности, а во втором — размеры выборок. В зависимости от контекста, веса могут быть интерпретированы по-разному. Реализация на R и Python Код на R: means &lt;- c(50, 60, 70) # Средние значения weights &lt;- c(10, 20, 30) # Веса (размеры выборок) weighted_mean &lt;- sum(means * weights) / sum(weights) print(paste(&quot;Взвешенное среднее:&quot;, weighted_mean)) ## [1] &quot;Взвешенное среднее: 63.3333333333333&quot; Код на Python: import numpy as np means = np.array([50, 60, 70]) # Средние значения weights = np.array([10, 20, 30]) # Веса (размеры выборок) weighted_mean = np.sum(means * weights) / np.sum(weights) print(f&quot;Взвешенное среднее: {weighted_mean}&quot;) ## Взвешенное среднее: 63.333333333333336 6.1 Усечённое среднее: методы вычисления и примеры применения Усечённое среднее (англ. trimmed mean) — это статистический показатель, который используется для уменьшения влияния выбросов на оценку центральной тенденции. Усечённое среднее является устойчивым к выбросам аналогом среднего арифметического. Оно вычисляется путём удаления определённого процента наименьших и наибольших значений из выборки, после чего рассчитывается среднее арифметическое оставшихся данных. Этот метод особенно полезен в ситуациях, когда данные содержат аномальные значения, которые могут исказить результаты анализа. Формально усечённое среднее определяется следующим образом: Упорядочить выборку по возрастанию: \\(x_{(1)} \\leq x_{(2)} \\leq \\dots \\leq x_{(n)}\\). Удалить \\(k\\) наименьших и \\(k\\) наибольших значений, где \\(k = \\lfloor \\alpha n \\rfloor\\), \\(\\alpha\\) — доля удаляемых данных с каждого конца. Вычислить среднее арифметическое оставшихся значений: \\[ \\bar{x}_{\\text{trimmed}} = \\frac{1}{n - 2k} \\sum_{i=k+1}^{n-k} x_{(i)}. \\] 6.2 Теоретическое обоснование 6.2.1 Преимущества усечённого среднего Устойчивость к выбросам: Удаление крайних значений делает усечённое среднее менее чувствительным к аномалиям. Баланс между устойчивостью и эффективностью: В отличие от медианы, усечённое среднее использует больше информации из данных, сохраняя при этом устойчивость. 6.2.2 Недостатки усечённого среднего Потеря информации: Удаление части данных может привести к потере полезной информации. Зависимость от выбора \\(\\alpha\\): Результаты зависят от выбора доли удаляемых данных. 6.2.3 Выбор параметра \\(\\alpha\\) Обычно выбирают \\(\\alpha\\) в диапазоне от 0.05 до 0.25. Например, при \\(\\alpha = 0.1\\) удаляется 10% наименьших и 10% наибольших значений. 6.3 Пример вычисления усечённого среднего 6.3.1 Пример данных Рассмотрим выборку из 10 значений: \\[ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. \\] 6.3.2 Шаги вычисления Упорядочим выборку: \\[ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. \\] Выберем \\(\\alpha = 0.2\\). Тогда \\(k = \\lfloor 0.2 \\cdot 10 \\rfloor = 2\\). Удалим 2 наименьших и 2 наибольших значения: \\[ 5, 7, 11, 13, 17, 19. \\] Вычислим среднее арифметическое оставшихся значений: \\[ \\bar{x}_{\\text{trimmed}} = \\frac{5 + 7 + 11 + 13 + 17 + 19}{6} = \\frac{72}{6} = 12. \\] 6.4 Реализация на R и Python 6.4.1 Код на R В R усечённое среднее можно вычислить с помощью функции mean() с параметром trim: data &lt;- c(2, 3, 5, 7, 11, 13, 17, 19, 23, 29) alpha &lt;- 0.2 trimmed_mean &lt;- mean(data, trim = alpha) print(paste(“Усечённое среднее:”, trimmed_mean)) Код на Python python Copy from scipy.stats import trim_mean import numpy as np data = np.array([2, 3, 5, 7, 11, 13, 17, 19, 23, 29]) alpha = 0.2 trimmed_mean = trim_mean(data, proportiontocut=alpha) print(f”Усечённое среднее: {trimmed_mean}“) "],["типы-данных-в-таблицах.html", "Глава 7 Типы данных в таблицах", " Глава 7 Типы данных в таблицах Таблицы555 — это один из самых распространенных способов организации и хранения данных. Они используются в базах данных, электронных таблицах (например, Excel или Google Sheets), а также в аналитических инструментах. Каждый столбец таблицы обычно содержит данные определенного типа, что позволяет эффективно обрабатывать и анализировать информацию. В этой статье мы рассмотрим основные типы данных, которые могут встречаться в таблицах. print(76) [1] 76 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
